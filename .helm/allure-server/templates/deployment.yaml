apiVersion: apps/v1
kind: Deployment
metadata:
  name: allure-server-deployment
  labels:
  {{- include "allure-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
  {{- include "allure-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
    {{- include "allure-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "allure-server.serviceAccountName" . }}
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- include "helpers.list-env-variables" . | indent 12 }}
          {{- include "helpers.list-secret-env-variables" . | indent 12 }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          startupProbe:
            httpGet:
              path: /api/result
              port: http
            initialDelaySeconds: {{ .Values.startupInitialDelay }}
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/result
              port: http
            initialDelaySeconds: {{ .Values.livenessInitialDelay }}
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/result
              port: http
            initialDelaySeconds: {{ .Values.readinessInitialDelay }}
            periodSeconds: 30
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            # ConfigMap mount
            {{- if .Values.databaseCrt.enabled }}
            - name: crt
              mountPath: {{ .Values.databaseCrt.crt.targetDir }}
            {{- end }}
            # PVC mount
            {{- if .Values.pvc.enabled }}
            - name: storage
              mountPath: /allure
      {{- end }}
      volumes:
        # ConfigMap
        {{- if .Values.databaseCrt.enabled }}
        - name: crt
          configMap:
            name: allure-server-crt
        {{- end }}
        # PVC
        {{- if .Values.pvc.enabled }}
        - name: storage
          persistentVolumeClaim:
            claimName: allure-server-storagepvc
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
  {{- end }}
